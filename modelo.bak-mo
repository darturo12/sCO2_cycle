model modelo 

  extends sCO2_cycle.Interfaces.HeatExchangerInterface;
  parameter Boolean fixed_m_flow = true "True when"
    annotation(Evaluate=true, HideResult=true, choices(checkBox=true));
  parameter Modelica.SIunits.CoefficientOfHeatTransfer U = 1000;
  parameter Modelica.SIunits.Area A = 7369;
  parameter Modelica.SIunits.TemperatureDifference LMTD = 85;
  parameter Modelica.SIunits.MassFlowRate m_flow = 811.461;
  parameter Modelica.SIunits.TemperatureDifference DT_approach = 5;
  // Media packages for hot (h) and cold (c) fluid ports
  replaceable package MediumCold = sCO2_cycle.Media.CarbonDioxide;
  replaceable package MediumHot = sCO2_cycle.Media.ChlorideSalt.ChlorideSalt_ph;
  // Cold inlet and outlet thermodynamic states
  MediumCold.ThermodynamicState state_c_in = MediumCold.setState_phX(port_c_in.p,inStream(port_c_in.h_outflow));
  MediumCold.ThermodynamicState state_c_out = MediumCold.setState_phX(port_c_in.p,port_c_out.h_outflow);
  // Hot inlet and outlet thermodynamic states
  MediumHot.ThermodynamicState state_h_in = MediumHot.setState_phX(port_h_in.p,inStream(port_h_in.h_outflow));
  MediumHot.ThermodynamicState state_h_out = MediumHot.setState_phX(port_h_in.p,port_h_out.h_outflow);
  // Cold inlet and outlet temperatures
  Modelica.SIunits.Temperature T_c_in;
  Modelica.SIunits.Temperature T_c_out;
  // Hot inlet and outlet temperatures
  Modelica.SIunits.Temperature T_h_in;
  Modelica.SIunits.Temperature T_h_out;
equation
  // Temperatures
  T_c_in = MediumCold.temperature(state_c_in);
  T_c_out = MediumCold.temperature(state_c_out);
  T_h_in = MediumHot.temperature(state_h_in);
  T_h_out = MediumHot.temperature(state_h_out);

  // Mass balances
  port_h_in.m_flow + port_h_out.m_flow = 0; // Hot stream
  if fixed_m_flow then
    port_c_out.m_flow = -m_flow;
  else
    port_c_in.m_flow + port_c_out.m_flow = 0; // Cold stream
  end if;

  // Energy balance
  Q_flow = port_h_in.m_flow*(inStream(port_h_in.h_outflow) - port_h_out.h_outflow);
  Q_flow = U*A*LMTD;
  Q_flow = port_c_in.m_flow*(port_c_out.h_outflow - inStream(port_c_in.h_outflow));
  
  // Pressure balance
  port_h_in.p - port_h_out.p = 0;
  port_c_in.p - port_c_out.p = 0;
  
  // Shouldn't have reverse flows
  port_h_in.h_outflow = 0;
  port_c_in.h_outflow = 0;
 annotation(
    Icon(coordinateSystem(extent = {{-40, -40}, {40, 40}})),
    Diagram(coordinateSystem(extent = {{-40, -40}, {40, 40}})));
end modelo ;

